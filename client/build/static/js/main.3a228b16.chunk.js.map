{"version":3,"sources":["images/clipboard.svg","images/user.svg","pages/components/Header.jsx","pages/components/Loading.jsx","pages/components/general/TopBanner.jsx","pages/components/sessions/EditSessionForm.jsx","pages/components/sessions/DeleteSessionBox.jsx","pages/components/sessions/Session.jsx","pages/components/sessions/Month.jsx","pages/Index.jsx","pages/components/registerlogin/RegisterForm.jsx","pages/Register.jsx","pages/components/registerlogin/LoginForm.jsx","pages/Login.jsx","pages/Logout.jsx","pages/components/log/FormRow.jsx","pages/components/log/LogForm.jsx","pages/Log.jsx","pages/components/compare/CompareForm.jsx","pages/components/compare/Session.jsx","pages/components/compare/Month.jsx","pages/Compare.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","to","id","loggedIn","link","content","map","index","key","Loading","TopBanner","title","EditSessionForm","useState","date","session","times","comments","formInputs","setFormInputs","invalidInputs","setinvalidInputs","submitted","setSubmitted","blankFieldStyling","border","handleChange","event","target","name","value","prevValues","handleFocus","a","preventDefault","inputsValid","Object","keys","forEach","trim","Axios","url","method","data","response","success","handleEdit","callReRender","alert","message","onSubmit","action","onChange","onFocus","type","style","placeholder","onClick","DeleteSessionBox","errorMsg","setErrorMsg","handleDelete","Session","editMode","setEditMode","deleteMode","setDeleteMode","prevValue","Month","sessions","filter","Date","getMonth","month","getFullYear","year","_id","slice","Index","setSessions","months","setMonths","loading","setLoading","reRender","setReRender","useEffect","get","console","log","getSessions","length","RegisterForm","fName","lName","username","email","password","passwordConfirmation","history","useHistory","e","push","Register","src","clipboard","alt","LoginForm","headers","authenticate","error","Login","user","href","Logout","sendLogout","FormRow","slideDown","setSlideDown","rowNumber","CSSTransition","in","timeout","classNames","removeMissing","missingFormInputs","indexOf","toString","LogForm","rowCount","setRowCount","date0","session0","times0","comments0","setMissingFormInputs","fieldNames","splice","setTimeout","blankFields","Array","fill","n","field","submitToServer","prevCount","newValues","Log","CompareForm","month1","month2","formMonths","setFormMonths","monthNames","handleError","toggleSessionsGotten","month1Sessions","month2Sessions","disabled","number","Compare","sessions1","setSessions1","sessions2","setSessions2","monthsGotten","setMonthsGotten","sessionsGotten","setSessionsGotten","getMonths","sessionsMonth1","sessionsMonth2","err","parseInt","App","setLoggedIn","apiFinished","setApiFinished","location","useLocation","TransitionGroup","component","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3a228b16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clipboard.f2039292.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.85cddc58.svg\";","import React from 'react';\nimport {NavLink} from 'react-router-dom' ;\n\nfunction Header(props){\n  \n    // List of links for when user is / isnt logged in\n    const loggedInLinks = [ {link: \"/log\", content: \"Log\"}, \n                            {link: \"/compare\", content:\"Compare\"},  \n                            {link:\"/logout\", content: \"Log out\"} \n                        ];\n    const notLoggedInLinks = [ {link: \"/register\", content: \"Register\"},\n                                {link: \"/login\", content: \"Log in\"}\n                             ];\nreturn <nav>\n<div className=\"nav-left\">\n<NavLink  to='/' className=\"nav-logo\">\n    <span className=\"nav-logo\">\n    <span id=\"word-1\">T</span>\n    <span id=\"word-2\">L</span>\n    <span id=\"word-3\">V</span>\n  </span>\n  </NavLink>\n  \n</div>\n<div className=\"nav-right\">\n  {props.loggedIn ? \n    loggedInLinks.map((link, index) =>{ return <NavLink key={index} to={link.link} className=\"nav-link\">{link.content}</NavLink>})\n    : \n    notLoggedInLinks.map((link, index)=>{ return   <NavLink key={index} to={link.link} className=\"nav-link\">{link.content}</NavLink>})\n  }\n</div>\n</nav>\n\n}\n\nexport default Header;","import React from 'react';\n\nfunction Loading(){\n    return <div className=\"load-screen\">\n    <div className=\"lds-dual-ring\"></div>\n    </div>\n}\n\nexport default Loading;","import React from 'react';\n\nfunction TopBanner(props){\n    return <div className=\"top-banner\">\n    <h1>{ props.title }</h1>\n    <p>{ props.content }</p>\n    </div>\n}\n\nexport default TopBanner;","import React, { useState } from 'react';\nimport Axios from 'axios';\n\nfunction EditSessionForm(props){\n    const [formInputs, setFormInputs] = useState({date: props.date, session: props.session, times: props.times, comments: props.comments});\n    // state for whether inputs are valid\n    const [invalidInputs, setinvalidInputs] = useState({date: false, session: false, times: false});\n    const [submitted, setSubmitted] = useState(false);\n\n    const blankFieldStyling = {border: '2px solid red'};\n    \n    function handleChange(event){\n        const {name, value} = event.target;\n        setFormInputs(prevValues=>{\n            return {\n                ...prevValues,\n                [name]: value\n            }\n        })\n\n    }\n\n    // reset the field invalid state to false on focus of the input\n    function handleFocus(event){\n        const {name} = event.target;\n        setinvalidInputs(prevValues=>{\n            return {\n                ...prevValues,\n                [name]: false\n            }\n        });\n    }\n    \n    async function handleSubmit(event){\n        event.preventDefault();\n        // Validate inputs\n        let inputsValid = true;\n        Object.keys(formInputs).forEach(key=>{\n            if(formInputs[key].trim() === '' && key !== 'comments'){\n                setinvalidInputs(prevValues=>{\n                    return {\n                        ...prevValues,\n                        [key]: true\n                    }\n                });\n                inputsValid =false;\n            }\n        });\n        if (inputsValid === false) { return; }\n\n        // if inputs valid proceed\n        setSubmitted(true);\n        \n        const response = await Axios({\n                            url:'/api/editSession',\n                            method: 'patch',\n                            data: {\n                                ...formInputs,\n                                id: props.id\n                            }\n                        });\n        if (response.data.success === true){\n            props.handleEdit();\n            props.callReRender();\n        } else {\n            alert(response.data.message);\n        }\n    }\n\n    return <form onSubmit={handleSubmit} className=\"session-form\" action=\"/editSession\" method=\"post\">\n                <input onChange={handleChange}\n                    onFocus={handleFocus}\n                    type=\"date\"\n                    name=\"date\"\n                    value={formInputs.date}\n                    style={invalidInputs.date ? blankFieldStyling : {}}\n                    />\n                <textarea onChange={handleChange}\n                    onFocus={handleFocus}\n                    name=\"session\"\n                    placeholder=\"Session\"\n                    value={formInputs.session}\n                    style={invalidInputs.session ? blankFieldStyling : {}}></textarea>\n                <textarea onChange={handleChange}\n                    onFocus={handleFocus}\n                    name=\"times\"\n                    placeholder=\"Times\"\n                    value={formInputs.times}\n                    style={invalidInputs.times ? blankFieldStyling : {}}></textarea>\n                <textarea onChange={handleChange}\n                    name=\"comments\"\n                    placeholder=\"Comments\"\n                    value={formInputs.comments}></textarea>\n                \n                <div className=\"submit-cancel-buttons\">\n                    {submitted ? \n                    <div className=\"lds-dual-ring\"></div>\n                    :\n                        <>\n                            <button onClick={props.handleEdit} type=\"button\" className=\"cancel\">Cancel</button>\n                            <button className=\"submit\" type=\"submit\">Confirm</button>\n                        </>\n                    }\n                </div>\n                \n            </form>\n                \n}\n\nexport default EditSessionForm;","import React, { useState } from 'react';\nimport Axios from 'axios';\n\nfunction DeleteSessionBox(props){\n    const [errorMsg, setErrorMsg] = useState('');\n    const [submitted, setSubmitted] = useState(false);\n    \n    async function submitDelete(){\n        setSubmitted(true);\n        const response = await Axios({\n            url: '/api/deleteSession',\n            method: 'delete',\n            data: {\n                id: props.id\n            }\n        });\n\n        if(response.data.success === true){\n            props.callReRender()\n            props.handleDelete();\n        } else {\n            setSubmitted(false);\n            setErrorMsg(response.data.message);\n        }\n    }\n    return <div className=\"confirmation-window\">\n                <div className=\"confirmation-box\">\n                    <h3>Are you sure you want to delete this session?</h3>\n                    <p>{errorMsg}</p>\n                    {submitted ? \n                        <div className=\"lds-dual-ring\"></div>\n                        :\n                        <>\n                            <button className=\"submit\" onClick={submitDelete}>Delete</button>\n                            <button onClick={props.handleDelete} className=\"cancel\">Cancel</button>\n                        </>\n                    }\n                </div>\n            </div>\n}\n\nexport default DeleteSessionBox;","import React, { useState } from 'react';\nimport EditSessionForm from './EditSessionForm.jsx';\nimport DeleteSessionBox from './DeleteSessionBox.jsx';\n\nfunction Session(props){\n    const [editMode, setEditMode] = useState(false);\n    const [deleteMode, setDeleteMode] = useState(false);\n\n    function handleEdit(){\n        setEditMode(prevValue=>{\n            return !prevValue;\n        });\n    }\n    function handleDelete(){\n        setDeleteMode(prevValue=>{\n            return !prevValue;\n        });\n    }\n\n    return <div id={props.id} className=\"session-info\">\n                {editMode ? <EditSessionForm \n                            id={props.id}\n                            date={props.date} \n                            session={props.session} \n                            times={props.times} \n                            comments={props.comments}\n                            callReRender={props.callReRender}\n                            handleEdit={handleEdit} \n                            />\n                :\n                <>\n                    <div className=\"session-item\">\n                    {props.date}\n                    </div>\n                    <div className=\"session-item\">\n                    {props.session}\n                    </div>\n                    <div className=\"session-item\">\n                    {props.times}\n                    </div>\n                    <div className=\"session-item\">\n                    {props.comments}\n                    </div>\n                    <div className=\"edit-delete-buttons\">\n                    <button onClick={handleEdit} className='edit'>Edit</button>\n                    <button onClick={handleDelete} className='delete'>Delete</button>\n                    </div>\n                </>\n                }\n                {deleteMode && <DeleteSessionBox \n                                handleDelete={handleDelete} \n                                callReRender={props.callReRender} \n                                id={props.id} />}\n              \n        </div> \n    \n}\n\nexport default Session;","import React from 'react';\nimport Session from './Session.jsx';\n\nfunction Month(props){\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Novemeber', 'December'];\n    const sessions = props.sessions.filter(session=>{ return new Date(session.date).getMonth() === props.month && new Date(session.date).getFullYear() === props.year });\n    const month = monthNames[props.month] + ' ' + props.year;\n    \n    return <div className=\"month\">\n                <h3 className=\"month-title\">{ month }</h3>\n                <div className=\"table-headers\">\n                    <div className=\"header\">Date</div>\n                    <div className=\"header\">Session</div>\n                    <div className=\"header\">Times</div>\n                    <div className=\"header\">Comments</div>\n                    <div className=\"header\"></div>\n                </div>\n                { sessions.map((session, index) =>{ \n                    return <Session \n                    key={index} \n                    id={session._id} \n                    date={session.date.slice(0,10)} \n                    session={session.session} \n                    times={session.times} \n                    comments={session.comments}\n                    callReRender={props.callReRender} /> \n                    })\n                }\n        \n            </div>\n}\n\nexport default Month;","import React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport Loading from './components/Loading.jsx';\nimport TopBanner from './components/general/TopBanner.jsx';\nimport Month from './components/sessions/Month.jsx'\nimport { NavLink } from 'react-router-dom';\n\nfunction Index(){\n    const [sessions, setSessions] = useState([]);\n    const [months, setMonths] = useState([]);\n    const [errorMsg, setErrorMsg] = useState('');\n    const [loading, setLoading] = useState(true);\n    // Used in use effect so infinite loop not invoked\n    const [reRender, setReRender] = useState(false);\n\n    useEffect(()=>{\n        async function getSessions(){\n            try{\n                let response = await Axios.get(\"/api/home\");\n                if (response.data.success === true){\n                    setSessions(response.data.sessions);\n                    setMonths(response.data.months); \n                    setLoading(false);\n                } else {\n                    setErrorMsg(response.data.message);\n                }\n                \n            } catch(e){\n                console.log(e);\n            } \n        }\n        getSessions();\n    }, [reRender]);\n\n\n    function callReRender(){\n         // instigate re-render of sessions \n         setReRender(!reRender);\n    }\n\n    return <div className='page'>\n            <TopBanner title='Your Sessions' content='Track, view, edit and delete sessions' />\n            \n            <div className=\"error-msg\">\n            {errorMsg}\n            </div>\n\n            <div className=\"sessions\">\n            {loading ? <Loading />\n            :\n            <>\n                {months.length !== 0 ? months.map((month, index)=>{\n                                        return <Month key={index} \n                                                month={month.month}\n                                                year={month.year} \n                                                sessions={sessions}\n                                                callReRender={callReRender} /> \n                                            })\n                                    :\n                                    <div className=\"no-sessions\">\n                                        <p>You haven't logged any sessions yet!</p>\n                                        <NavLink to=\"/log\" className=\"log-button\">Log your first session!</NavLink> \n                                    </div>\n                }\n            </>}\n            </div>\n            \n        \n        </div>\n}\n\nexport default Index;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Axios from 'axios';\n\nfunction RegisterForm(){\n    const [formInputs, setFormInputs] = useState({fName: \"\", lName: \"\", username: \"\", email: \"\", password: \"\", passwordConfirmation: \"\"});\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [submitted, setSubmitted] = useState(false);\n    \n    const history = useHistory();\n\n    function handleChange(e){\n        const {name, value} = e.target;\n        \n        setFormInputs( prevValues =>{\n            return {\n                ...prevValues,\n                [name]: value\n            }\n        }\n        );\n    }\n\n    async function handleSubmit(e){\n        e.preventDefault();\n        setSubmitted(true);\n        try{\n            const response = await Axios({\n                url: '/api/register',\n                method: 'POST',\n                data: {\n                    ...formInputs\n                }\n            });\n\n            if (response.data.success === true){\n                history.push('/login');\n            } else {\n                setSubmitted(false);\n                setErrorMsg(response.data.message);\n            }\n        } catch(e){\n            alert(e);\n        }\n    }\n\n    return   <form onSubmit={handleSubmit} action=\"/register\" method=\"post\">\n    <input onChange={handleChange} value={formInputs.fName} type=\"text\" name=\"fName\" placeholder=\"first name\" />\n    <input onChange={handleChange} value={formInputs.lName} type=\"text\" name=\"lName\" placeholder=\"last name\" />\n    <input onChange={handleChange} value={formInputs.username} type=\"text\" name=\"username\" placeholder=\"username\" />\n    <input onChange={handleChange} value={formInputs.email} type=\"email\" name=\"email\" placeholder=\"email\" />\n    <input onChange={handleChange} value={formInputs.password} type=\"password\" name=\"password\" placeholder=\"password\" />\n    <input onChange={handleChange} value={formInputs.passwordConfirmation} type=\"password\" name=\"passwordConfirmation\" placeholder=\"password again\" />\n    <div className=\"error-msg\">\n    {errorMsg}\n    </div>\n    <button className=\"login-button\" type=\"submit\">{submitted ? <div className=\"lds-dual-ring\"></div> : 'Register'}</button>\n    </form>\n}\n\nexport default RegisterForm;","import React from 'react';\nimport RegisterForm from './components/registerlogin/RegisterForm.jsx'\nimport clipboard from '../images/clipboard.svg'\n\nfunction Register(){\n\nreturn <div className=\"login-container page\">\n        <div className=\"login-box\">\n            <img className=\"user-img\" src={clipboard} alt=\"\"/>\n            <RegisterForm />\n        </div>\n        </div>;\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport Axios from 'axios';\n\nfunction LoginForm(props){\n    const [formInputs, setFormInputs] = useState({username: \"\", password: \"\"});\n    const [errorMsg, setErrorMsg] = useState(\"\");\n    const [submitted, setSubmitted] = useState(false);\n\n    function handleChange(e){\n        const {name, value} = e.target;\n        \n        setFormInputs( prevValues =>{\n            return {\n                ...prevValues,\n                [name]: value\n            }\n        }\n        );\n    }\n\n    async function handleSubmit(e){\n        e.preventDefault();\n        setSubmitted(true);\n        try{\n            const response = await Axios({\n                url: '/api/login',\n                method: 'POST',\n                headers: {},\n                data: {\n                    ...formInputs\n                }\n            });\n            \n            if (response.data.success === true){\n                await props.authenticate();\n            } else {\n                setSubmitted(false);\n                setErrorMsg(response.data.error);\n            }\n        } catch(e) {\n            alert(e);\n            setSubmitted(false);\n        }\n    }\n\n    return   <form onSubmit={handleSubmit} action=\"/login\" method=\"post\">\n    <input onChange={handleChange} value={formInputs.username} type=\"text\" name=\"username\" placeholder=\"username\" />\n    <input onChange={handleChange} value={formInputs.password} type=\"password\" name=\"password\" placeholder=\"password\" />\n    <div className=\"error-msg\">\n    {errorMsg}\n    </div>\n    <button className=\"login-button\" type=\"submit\">{submitted ? <div className=\"lds-dual-ring\"></div> : 'Log In'}</button>\n    </form>\n}\n\nexport default LoginForm;","import React from 'react';\nimport LoginForm from './components/registerlogin/LoginForm.jsx'\nimport user from '../images/user.svg'\n\n\nfunction Login(props){\n    return <div className=\"login-container page\">\n    <div className=\"login-box\">\n    <img className=\"user-img\" src={user} alt=\"\"></img>\n      <LoginForm authenticate={props.authenticate} />\n      <a href=\"/register\"><button className=\"register-button\">Register</button></a>\n    </div>\n  </div>\n}\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport Loading from './components/Loading.jsx';\nimport Axios from 'axios';\n\nfunction Logout(props){\n   \n    useEffect(()=>{\n        async function sendLogout(){\n            try{\n                let response = await Axios.get(\"/api/logout\");\n                if (response.data.success === true){\n                    await props.authenticate();\n                }\n            } catch(e){\n                console.log(e);\n            }\n        }\n        sendLogout();\n    });\n    \n    return <Loading />;\n}\n\nexport default Logout;\n","import React, { useState, useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\n\nfunction FormRow(props){\n    const [slideDown, setSlideDown] = useState(false);\n    const date = 'date' + props.rowNumber;\n    const session = 'session' + props.rowNumber;\n    const times = 'times' + props.rowNumber;\n    const comments = 'comments' + props.rowNumber;\n    \n    const blankFieldStyling = {border: '2px solid red'};\n    \n    useEffect(()=>{\n        setSlideDown(true);\n    }, []);\n    \n    return  <CSSTransition in={slideDown} timeout={500} classNames={'slide-down'}>\n                <div id={props.rowNumber} className=\"session-form\">\n \n                        <input onChange={props.handleChange} \n                                onFocus={props.removeMissing}\n                                value={props.formInputs[date]} \n                                type=\"date\"\n                                name={\"date\" + props.rowNumber} \n                                style={props.missingFormInputs.indexOf('date' + props.rowNumber.toString()) !== -1 ? blankFieldStyling : {}}\n                                />\n\n                        <textarea onChange={props.handleChange} \n                                onFocus={props.removeMissing}\n                                value={props.formInputs[session]}\n                                name={\"session\" + props.rowNumber} \n                                placeholder=\"Session\"\n                                style={props.missingFormInputs.indexOf('session' + props.rowNumber.toString()) !== -1 ? blankFieldStyling : {}}></textarea>\n\n                        <textarea onChange={props.handleChange} \n                                onFocus={props.removeMissing}\n                                value={props.formInputs[times]}\n                                name={\"times\" + props.rowNumber}\n                                placeholder=\"Times\"\n                                style={props.missingFormInputs.indexOf('times' + props.rowNumber.toString()) !== -1 ? blankFieldStyling : {}}></textarea>\n\n                        <textarea onChange={props.handleChange} \n                                value={props.formInputs[comments]}\n                                name={\"comments\" + props.rowNumber}\n                                placeholder=\"Comments (Optional)\"></textarea>\n                </div>\n                </CSSTransition>\n}\n\nexport default FormRow;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport FormRow from './FormRow.jsx';\nimport Axios from 'axios';\n\nfunction LogForm(){\n    const [rowCount, setRowCount] = useState(1);\n    const [formInputs, setFormInputs] = useState({date0: '', session0: '', times0: '', comments0: ''});\n    const [missingFormInputs, setMissingFormInputs] = useState([]);\n    const [submitted, setSubmitted] = useState(false);\n    const fieldNames = ['date', 'session', 'times', 'comments'];\n\n    const history = useHistory();\n\n    function handleChange(event){\n        const {name, value} = event.target;\n            setFormInputs(prevValues=>{\n                return {\n                    ...prevValues,\n                    [name]: value\n                }\n            });       \n    }\n\n    function handleAddRow(){\n        setRowCount(prevCount=>{\n            return prevCount + 1;\n        });\n        // update form inputs state with the new fields added\n        setFormInputs(prevValues=>{\n            const newValues = {};\n            const newFieldNames= fieldNames.map(field=>{ return field + rowCount.toString(); });\n            newFieldNames.forEach(field=>{ newValues[field] = ''; });\n            return {\n                ...prevValues,\n                ...newValues\n            }\n        });\n    }\n    function handleRemoveRow(){\n        if (rowCount > 1){\n            setRowCount(prevCount=>{\n                return prevCount - 1;\n            });\n            // update form inputs state removing the fields removed\n            setFormInputs(prevValues=>{\n                fieldNames.forEach(field=>{ delete prevValues[field + (rowCount -1).toString()]; });\n                return {\n                    ...prevValues,\n                }\n            });\n            \n        }\n    }\n    // removes field from missing inputs list \n    function removeMissing(event){\n        const {name} = event.target;\n        setMissingFormInputs(prevValues=>{\n            prevValues.splice(prevValues.indexOf(name), 1);\n            return [\n                ...prevValues\n            ];\n        })\n    }\n\n    function handleSubmit(event){\n        event.preventDefault();\n        setSubmitted(true);\n        // Check all neccessary fields have been filled\n        let blankFields = [];\n        Array(rowCount).fill(0).forEach((n, index)=>{\n            fieldNames.forEach(field=>{ \n                // if field is blank add it to blank fields array\n                if ( formInputs[field + index.toString()].trim() === '' && field !== 'comments'){\n                     blankFields.push(field + index.toString()); \n                }\n        });\n    });\n        // Set state of missing form inputs\n        setMissingFormInputs([\n            ...blankFields\n        ]);\n\n        if (blankFields.length === 0){\n            submitToServer();\n        } else {\n            setSubmitted(false);\n        }\n    }\n\n    async function submitToServer(){\n        try{\n            const response = await Axios({\n                url:'/api/log',\n                method: 'POST',\n                data: {\n                    ...formInputs\n                    }\n                });\n            if (response.data.success){\n                setTimeout(function(){\n                    history.push(\"/\");\n                }, 500)\n            } else {\n                alert(response.data.message);\n            }\n        }\n       catch(e){\n           alert(e);\n       }\n    }\n    \n    return  <form onSubmit={handleSubmit} action=\"/log\" method=\"post\">\n    {Array(rowCount).fill(0).map((n, index)=>{ \n        return    <FormRow \n                    key={index} \n                    rowNumber={index} \n                    handleChange={handleChange}\n                    formInputs={formInputs}\n                    missingFormInputs={missingFormInputs}\n                    removeMissing={removeMissing}\n                    />; \n\n        })}\n    <div className=\"add-remove-buttons\">\n    <button onClick={handleAddRow} className=\"add\" id=\"add\" type=\"button\">Add another session</button>\n    <button onClick={handleRemoveRow}className=\"remove\" id=\"remove\" type=\"button\">Remove last session</button>\n    </div>\n    <div className=\"error-msg\">\n   \n    </div>\n    <button className=\"log-button\" type=\"submit\">{submitted ? <div className=\"lds-dual-ring\"></div> : 'Log'}</button>\n</form>\n}\n\nexport default LogForm;","import React from 'react';\nimport TopBanner from './components/general/TopBanner';\nimport LogForm from './components/log/LogForm.jsx';\n\nfunction Log(){\n    return <div className='page'>\n            <TopBanner title='Log' content='Add one or mulitple sessions to your training log' />\n            <div className=\"log-container\">\n                <LogForm />\n            </div>\n            </div>\n                    \n\n}\n\nexport default Log;","import React, { useState } from 'react';\nimport Axios from 'axios';\n\nfunction CompareForm(props){\n    const [formMonths, setFormMonths] = useState({month1: '', month2: ''});\n\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Novemeber', 'December'];\n    \n    function handleChange(event){\n        const {name, value} = event.target;\n        setFormMonths(prevValues=>{\n            return {\n                ...prevValues,\n                [name]: value\n            }\n        });\n    }\n\n    async function handleSubmit(event){\n        event.preventDefault();\n\n        if (formMonths.month1 === '' || formMonths.month2 === '') return props.handleError('Please select 2 months to compare');\n        // reset error message\n        props.handleError('');\n        // toggle session gotten to display loader\n        props.toggleSessionsGotten();\n        const response = await Axios({\n                        url:'/api/compare',\n                        method:'post',\n                        data: formMonths\n        });\n\n        if (response.data.success === true){\n            props.setSessions(formMonths.month1, response.data.month1Sessions, formMonths.month2, response.data.month2Sessions);\n        } else {\n            props.handleError(response.data.message);\n        } \n        // after load toggles session gotten to display content \n        props.toggleSessionsGotten();\n    }\n\n    return <div className=\"compare-form-container\">\n            <form onSubmit={handleSubmit} action=\"/compare\" method=\"get\">\n                <select onChange={handleChange} value={formMonths.month1} name=\"month1\">\n                <option value=\"\" disabled=\"disabled\">Choose Month</option>\n                {props.months.map((month, index)=>{ \n                    const date = '0' + (month.month + 1).toString().slice(-2) + ' ' + month.year;\n                    return <option  key={index} value={date}>{monthNames[month.month] + ' ' + month.year}</option>\n                })}\n                </select>\n                <select onChange={handleChange} value={formMonths.month2} name=\"month2\">\n                <option value=\"\" disabled=\"disabled\">Choose Month</option>\n                {props.months.map((month, index)=>{ \n                    const date = '0' + (month.month + 1).toString().slice(-2) + ' ' + month.year;\n                    return <option  key={index} value={date}>{monthNames[month.month] + ' ' + month.year}</option>\n                })}\n                </select>\n                <button className=\"compare-button\" type=\"submit\">Compare</button>\n            </form>\n            <div className=\"error-msg\">\n                {props.errorMsg}\n            </div>\n            </div>\n}\n\nexport default CompareForm;","import React from 'react';\n\nfunction Session(props){\n    return <div id={props.id} className=\"session-info\">\n                <div className=\"session-item\">\n                {props.date}\n                </div>\n                <div className=\"session-item\">\n                {props.session}\n                </div>\n                <div className=\"session-item\">\n                {props.times}\n                </div>\n                <div className=\"session-item\">\n                {props.comments}\n                </div>\n            </div>\n}\n\nexport default Session;","import React from 'react';\nimport Session from './Session.jsx';\n\nfunction Month(props){\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Novemeber', 'December'];\n    \n    const sessions = props.sessions.filter(session=>{ return new Date(session.date).getMonth() === props.month && new Date(session.date).getFullYear() === props.year });\n    const month = monthNames[props.month] + ' ' + props.year;\n    return <div className=\"month compare-month\">\n                <h3 className=\"month-title\">{ props.month ? month : 'Month ' + props.number }</h3>\n                <div className=\"table-headers\">\n                    <div className=\"header\">Date</div>\n                    <div className=\"header\">Session</div>\n                    <div className=\"header\">Times</div>\n                    <div className=\"header\">Comments</div>\n                </div>\n                { sessions.map((session, index) =>{ \n                    return <Session \n                    key={index} \n                    id={session._id} \n                    date={session.date.slice(0,10)} \n                    session={session.session} \n                    times={session.times} \n                    comments={session.comments} /> \n                    })\n                }\n        \n            </div>\n}\n\nexport default Month;","import React, {useState, useEffect} from 'react';\nimport TopBanner from './components/general/TopBanner.jsx';\nimport CompareForm from './components/compare/CompareForm.jsx';\nimport Month from './components/compare/Month.jsx';\nimport Loading from './components/Loading.jsx';\nimport Axios from 'axios';\n\nfunction Compare(){\n    const [sessions1, setSessions1] = useState({month: '', sessions: []});\n    const [sessions2, setSessions2] = useState({month: '', sessions: []});\n    const [months, setMonths] = useState([]);\n    const [errorMsg, setErrorMsg] = useState('');\n    const [monthsGotten, setMonthsGotten]= useState(false);\n    const [sessionsGotten, setSessionsGotten]= useState(true);\n\n    useEffect(()=>{\n        async function getMonths(){\n            const response = await Axios.get('/api/compare');\n            \n            if(response.data.success === true){\n                setMonths(response.data.months);\n                setErrorMsg('');\n            }\n            else{\n                setErrorMsg(response.data.message);\n            }\n            setMonthsGotten(true);\n        }\n        getMonths();\n    }, []);\n\n    function setSessions(month1, sessionsMonth1, month2, sessionsMonth2){\n        setSessions1({month: month1, sessions: sessionsMonth1});\n        setSessions2({month: month2, sessions: sessionsMonth2});\n    }\n    function toggleSessionsGotten(){\n        setSessionsGotten(prevValue=>{\n            return !prevValue\n        });\n    }\n    function handleError(err){\n        setErrorMsg(err);\n    }\n\n    return (<div className='page'>\n                <TopBanner title='Compare' content='Select 2 months to track your progress' />\n                <div className='compare-container'>\n                { monthsGotten ? \n                    <>\n                        <CompareForm months={months} \n                                    errorMsg={errorMsg} \n                                    setSessions={setSessions} \n                                    toggleSessionsGotten={toggleSessionsGotten}\n                                    handleError={handleError} \n                        />\n                        <div className=\"sessions compare-sessions\">\n                        {sessionsGotten ? \n                        <>\n                            <Month  number={1}\n                                    month={parseInt(sessions1.month.slice(0,2)) - 1} \n                                    year={parseInt(sessions1.month.slice(-4))} \n                                    sessions={sessions1.sessions}>\n                            </Month> \n                            <Month  number={2}\n                                    month={parseInt(sessions2.month.slice(0,2)) - 1} \n                                    year={parseInt(sessions2.month.slice(-4))} \n                                    sessions={sessions2.sessions}>\n                            </Month> \n                        </>\n                        :\n                        <div className=\"lds-dual-ring\"></div>\n                        }\n                        \n                        </div>\n                    </>\n                    : \n                    <Loading />\n                }\n                </div>\n            </div>)\n}\n\nexport default Compare;","import React, { useState, useEffect } from 'react';\nimport { Switch , Route, Redirect, useLocation } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './App.css';\nimport Axios from 'axios';\nimport Header from './pages/components/Header.jsx';\nimport Index from './pages/Index.jsx';\nimport Register from './pages/Register.jsx';\nimport Login from './pages/Login.jsx';\nimport Logout from './pages/Logout.jsx';\nimport Log from './pages/Log.jsx';\nimport Compare from './pages/Compare.jsx';\n\nfunction App() {\n  // Set state for user logged in and authenticate\n  const [loggedIn, setLoggedIn] = useState(null);\n  const [apiFinished, setApiFinished] = useState(false);\n  const location = useLocation();\n  \n  async function authenticate(){\n    let response = await Axios.get(\"/api/isloggedin\");\n    setLoggedIn(response.data.loggedIn);\n    setApiFinished(true);\n  }\n\n  useEffect(()=>{\n    authenticate();\n  }, []);\n\n  return (\n     <div>\n        {apiFinished && \n        <>\n          <Header loggedIn={loggedIn} />\n\n          <TransitionGroup component={null}>\n          <CSSTransition key={location.key} in={true} timeout={800} classNames='fade'>\n              <Switch location={location}>\n                <Route exact path=\"/\">\n                  {loggedIn ? <Index /> : <Redirect to=\"/login\" />}\n                </Route>\n                <Route path=\"/login\">\n                  {loggedIn ? <Redirect to=\"/\" /> : <Login authenticate={authenticate} />}\n                </Route>\n                <Route path=\"/register\">\n                  {loggedIn ? <Redirect to=\"/\" /> : <Register />}\n                </Route>\n                <Route path=\"/logout\">\n                  {loggedIn ? <Logout authenticate={authenticate} /> : <Redirect to=\"login\" />}\n                </Route>\n                <Route exact path=\"/log\">\n                  {loggedIn ? <Log /> : <Redirect to=\"/login\" />}\n                </Route>\n                <Route path=\"/compare\">\n                  {loggedIn ? <Compare /> : <Redirect to=\"/login\" />}\n                </Route>\n                {/* if no routes matched redirect to homepage instead of serving */}\n                <Redirect to=\"/\" />\n              </Switch> \n            </CSSTransition>\n        </TransitionGroup>\n      </>}\n      </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  ,document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}